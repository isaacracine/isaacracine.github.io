geom_hline(yintercept=2^(-7/2), linetype="dashed", color='brown3') +
xlab(bquote(k^(0))) + ylab("Kinship Coefficient") + theme(legend.title = element_text("Relationship")) +
scale_color_manual(name = "Relationship", breaks = c('replicates', 'relatives', 'unrelated'),
values = c('replicates' = "deepskyblue3", 'relatives' = 'darkolivegreen3', 'unrelated' = 'black'))+
ggtitle("PC-AiR and PC-Relate Pairwise\nRelatedness Estimates")
ggplot(mypcrelate$kinBtwn, aes(x = k0, y = kin, group = relation)) +
geom_point(aes(col = relation)) + theme_bw() +
ggtitle("PC-AiR and PC-Relate Pairwise Relatedness Estimates") +
geom_hline(yintercept=2^(-7/2), linetype="dashed", color='brown3') +
xlab(bquote(k^(0))) + ylab("Kinship Coefficient") + theme(legend.title = element_text("Relationship")) +
scale_color_manual(name = "Relationship", breaks = c('replicates', 'relatives', 'unrelated'),
values = c('replicates' = "deepskyblue3", 'relatives' = 'darkolivegreen3', 'unrelated' = 'black'))+
ggtitle("PC-AiR and PC-Relate Pairwise\nRelatedness Estimates")
setwd("C:/Users/isaac/Education/UVM/R/KU/Thesis/admixture_relatedness")
library(ggplot2)
errors <- read.table("cv_errors.txt")
setwd("C:/Users/isaac/Education/UVM/R/KU/Thesis/plotting_admixture")
library(ggplot2)
errors <- read.table("cv_errors.txt")
head(errors)
errors$k <- c(2,3,4,5,6,7,8)
ggplot(errors, aes(y = V4, x= k)) + geom_line() +
geom_point() + theme_bw() +
xlab("Number of Tested Ancestries (K)") + ylab("Cross-validation Error") +
ggtitle("Number of Ancestries to Consider from ADMIXTURE Estimates")
q4 <- read.table("merged.4.Q")
head(q4)
dim(q4)
qnew <- q4[1:728,]
qnew_ord <- qnew[order(qnew$V1, qnew$V2, qnew$V3, qnew$V4),]
barplot(t(as.matrix(qnew_ord)), col=rainbow(4),
xlab="Individual #", ylab="Ancestry", border=NA)
q3 <- read.table("htlv_hg38_upd_ids.3.Q")
q3$id <- row.names(q3)
head(q3)
q3_ordered <- q3[order(q3$V1, q3$V2),]
barplot(t(as.matrix(q3_ordered)), col=rainbow(3),
xlab="Individual #", ylab="Ancestry", border=NA)
b <- read.table("best_merged.3.Q")
barplot(t(as.matrix(b)), col=rainbow(3),
xlab="Individual #", ylab="Ancestry", border=NA)
b[order(b$V1, b$V2),]
bb<-b[order(b$V1, b$V2),]
barplot(t(as.matrix(bb)), col=rainbow(3),
xlab="Individual #", ylab="Ancestry", border=NA)
b[1,]
b[1:728,]
barplot(t(as.matrix(bb[order(b$V1, b$V2),])), col=rainbow(3),
xlab="Individual #", ylab="Ancestry", border=NA)
bb<-b[1:728,] #bb[order(b$V1, b$V2),]
barplot(t(as.matrix(bb[order(b$V1, b$V2),])), col=rainbow(3),
xlab="Individual #", ylab="Ancestry", border=NA)
b <- read.table("best_merged.3.Q")
bb<-b[1:728,] #bb[order(b$V1, b$V2),]
barplot(t(as.matrix(bb[order(b$V1, b$V2),])), col=rainbow(3),
xlab="Individual #", ylab="Ancestry", border=NA)
b
library(tidyverse)
plot_data <- b %>%
mutate(id = row_number()) %>%
gather('pop', 'prob', V1:V3) %>%
group_by(id) %>%
mutate(likely_assignment = pop[which.max(prob)],
assingment_prob = max(prob)) %>%
arrange(likely_assignment, desc(assingment_prob)) %>%
ungroup() %>%
mutate(id = forcats::fct_inorder(factor(id)))
head(plot_data)
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col() +
theme_classic()
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme_classic()
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme_bw()
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylim(0,1) +
theme_bw()
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylim() +
theme_bw()
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylim() +
theme_bw()
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +  +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw()
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw()
#############Make the CV eror plot################
errors <- read.table("cv_estmiates.txt")
#############Make the CV eror plot################
errors <- read.table("cv_estimates.txt")
head(errors)
errors$k <- c(2,3,4,5,6)
ggplot(errors, aes(y = V4, x= k)) + geom_line() +
geom_point() + theme_bw() +
xlab("Number of Tested Ancestries (K)") + ylab("Cross-validation Error") +
ggtitle("Number of Ancestries to Consider from ADMIXTURE Estimates")
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw()
head(plot_data$id)
head(plot_data)
#read in the ancestries
ancs <- read.table("full_ancs.txt")
data <- cbind(b, ancs)
head(data)
colnames(ancs) <- c("IID", "ancestry")
#combine them
data <- cbind(b, ancs)
head(data)
plot_data <- data %>%
mutate(id = row_number()) %>%
gather('pop', 'prob', V1:V3) %>%
group_by(id) %>%
mutate(likely_assignment = pop[which.max(prob)],
assingment_prob = max(prob)) %>%
arrange(likely_assignment, desc(assingment_prob)) %>%
ungroup() %>%
mutate(id = forcats::fct_inorder(factor(id)))
head(plot_data)
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw()
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry)
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry,scales = 'free', space = 'free')
ggplot(plot_data[sort(plot_data$prob, plot_data$pop),], aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry,scales = 'free', space = 'free')
ggplot(plot_data[sort(plot_data$prob),], aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry,scales = 'free', space = 'free')
ggplot(plot_data[sort(plot_data$prob),], aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry,scales = 'free', space = 'free')
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry,scales = 'free', space = 'free')
plot_data[sort(plot_data$prob),]
head(plot_data)
plot_data[sort(plot_data$pop),]
tail(plot_data)
head(data)
ggplot(data, aes(IID, V1, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry,scales = 'free', space = 'free')
ggplot(data, aes(IID, V1)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry,scales = 'free', space = 'free')
#mutate the data (got from stackoverflow)
plot_data <- data[order(data$V1, data$V2),] %>%
mutate(id = row_number()) %>%
gather('pop', 'prob', V1:V3) %>%
group_by(id) %>%
mutate(likely_assignment = pop[which.max(prob)],
assingment_prob = max(prob)) %>%
arrange(likely_assignment, desc(assingment_prob)) %>%
ungroup() %>%
mutate(id = forcats::fct_inorder(factor(id)))
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry,scales = 'free', space = 'free')
head(plot_data)
merge(plot_data, data, by = c("IID"))
merge(plot_data, data, by = c("IID", "ancestry"))
new <- merge(plot_data, data, by = c("IID", "ancestry"))
new[sort(new$V1),]
new[sort(new$V3),]
new[,sort(new$V3)]
plot_data$ancestry <- ifelse(plot_data$ancestry == "-", "COHORT", ifelse(plot_data$ancestry == "EUR", "EUR", ifelse(plot_data$ancestry == "AFR", "AFR", "ASN")))
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry,scales = 'free', space = 'free')
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry,scales = 'free', space = 'free', levels = "AFR", "ASN", "EUR", "COHORT")
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry,scales = 'free', space = 'free', levels = c("AFR", "ASN", "EUR", "COHORT"))
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~ancestry,scales = 'free', space = 'free', levels = c("AFR", "ASN", "EUR", "COHORT"))
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("AFR", "ASN", "EUR", "COHORT")),scales = 'free', space = 'free')
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_fill_manual(name = "Ancestry", values = c("brown3", "deepskyblue3", "darkolivegreen3")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("AFR", "ASN", "EUR", "COHORT")),scales = 'free', space = 'free')
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_fill_manual(name = "Ancestry", values = c("brown3", "mediumpurple", "darkolivegreen3")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("AFR", "ASN", "EUR", "COHORT")),scales = 'free', space = 'free')
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_fill_manual(name = "Ancestry", values = c("brown3", "mediumpurple", "darkolivegreen3"), labels = c("EUR", "ASN", "AFR")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("AFR", "ASN", "EUR", "COHORT")),scales = 'free', space = 'free')
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_fill_manual(name = "Ancestry", values = c("brown3", "mediumpurple", "darkolivegreen3"), labels = c("EUR", "ASN", "AFR")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("AFR", "ASN", "EUR", "COHORT")),scales = 'free', space = 'free')
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_fill_manual(name = "Ancestry", values = c("brown3", "mediumpurple", "darkolivegreen3"), labels = c("EUR", "ASN", "AFR")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free')
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "mediumpurple", "darkolivegreen3"), labels = c("EUR", "ASN", "AFR")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free')
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "mediumpurple", "darkolivegreen3"), labels = c("EUR", "ASN", "AFR")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
#try to reorganizs
s <- data$V2
data$V3 <- s
#mutate the data (got from stackoverflow)
plot_data <- data[order(data$V1, data$V2),] %>%
mutate(id = row_number()) %>%
gather('pop', 'prob', V1:V3) %>%
group_by(id) %>%
mutate(likely_assignment = pop[which.max(prob)],
assingment_prob = max(prob)) %>%
arrange(likely_assignment, desc(assingment_prob)) %>%
ungroup() %>%
mutate(id = forcats::fct_inorder(factor(id)))
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "mediumpurple", "darkolivegreen3"), labels = c("EUR", "ASN", "AFR")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
#read in the Q estimate
b <- read.table("best_merged.3.Q")
#read in the ancestries
ancs <- read.table("full_ancs.txt")
colnames(ancs) <- c("IID", "ancestry")
#combine them
data <- cbind(b, ancs)
head(data)
#try to reorganizs
s <- data$V2
data$V2 <- data$V3
data$V3 <- s
#mutate the data (got from stackoverflow)
plot_data <- data[order(data$V1, data$V2),] %>%
mutate(id = row_number()) %>%
gather('pop', 'prob', V1:V3) %>%
group_by(id) %>%
mutate(likely_assignment = pop[which.max(prob)],
assingment_prob = max(prob)) %>%
arrange(likely_assignment, desc(assingment_prob)) %>%
ungroup() %>%
mutate(id = forcats::fct_inorder(factor(id)))
tail(plot_data)
plot_data$ancestry <- ifelse(plot_data$ancestry == "-", "COHORT", ifelse(plot_data$ancestry == "EUR", "EUR", ifelse(plot_data$ancestry == "AFR", "AFR", "ASN")))
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "mediumpurple", "darkolivegreen3"), labels = c("EUR", "ASN", "AFR")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "ASN", "AFR")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "AFR", "ASN")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
#
t <- ddply(.data=plot_data,
.(ancestry),
summarize,
n=paste("n =", length(ancestry)))
library(plyr)
#
t <- ddply(.data=plot_data,
.(ancestry),
summarize,
n=paste("n =", length(ancestry)))
t
#
t <- ddply(.data=plot_data,
.(ancestry),
summarize,
n=paste("n =", length(ancestry))) / 3
t$n /3
t$n
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "AFR", "ASN")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(data=t, aes(x=20, y=-.15, label=n),
colour="black", inherit.aes=FALSE, parse=FALSE)
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "AFR", "ASN")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(data=t, aes(x=20, y=-.005, label=n),
colour="black", inherit.aes=FALSE, parse=FALSE)
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "AFR", "ASN")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(data=t, aes(x=20, y=-.05, label=n),
colour="black", inherit.aes=FALSE, parse=FALSE)
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "AFR", "ASN")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(data=t, aes(x=20, y=-.009, label=n),
colour="black", inherit.aes=FALSE, parse=FALSE)
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "AFR", "ASN")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(data=t, aes(x=20, y=-.01, label=n),
colour="black", inherit.aes=FALSE, parse=FALSE)
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "AFR", "ASN")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(data=t, aes(x=20, y=-.015, label=n),
colour="black", inherit.aes=FALSE, parse=FALSE)
#
t <- ddply(.data=plot_data,
.(ancestry),
summarize,
n=paste("n =", length(ancestry)/3))
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "AFR", "ASN")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(data=t, aes(x=20, y=-.015, label=n),
colour="black", inherit.aes=FALSE, parse=FALSE)
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "AFR", "ASN")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(data=t, aes(x=50, y=-.015, label=n),
colour="black", inherit.aes=FALSE, parse=FALSE)
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "AFR", "ASN")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(data=t, aes(x=150, y=-.015, label=n),
colour="black", inherit.aes=FALSE, parse=FALSE)
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "AFR", "ASN")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(data=t, aes(x=70, y=-.015, label=n),
colour="black", inherit.aes=FALSE, parse=FALSE)
#
t <- ddply(.data=plot_data,
.(ancestry),
summarize,
n=length(ancestry)/3)
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col(width = 1) + ylab("Probability Estimate") +
ggtitle("Global Ancestry Estimates via ADMIXTURE") +
scale_fill_manual(name = "Ancestry", values = c("brown3", "darkolivegreen3", "mediumpurple"), labels = c("EUR", "AFR", "ASN")) +
theme_bw() + facet_grid(.~factor(ancestry, levels = c("EUR", "ASN", "AFR", "COHORT")),scales = 'free', space = 'free') +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(data=t, aes(x=40, y=-.015, label=n),
colour="black", inherit.aes=FALSE, parse=FALSE)
ggplot(errors, aes(y = V4, x= k)) + geom_line() +
geom_point() + theme_bw() +
xlab("Number of Tested Ancestries (K)") + ylab("Cross-validation Error") +
ggtitle("Number of Ancestries to Consider from ADMIXTURE Estimates")
